import {Component, PropTypes} from 'react';

import {Howl} from 'howler';

import RingtoneIncoming from './media/Ringtone.mp3';
import RingtoneRingback from './media/Ringback_v2.mp3';

export const RINGTONE_TYPE_INCOMING = `RINGTONE_TYPE_INCOMING`;
export const RINGTONE_TYPE_RINGBACK = `RINGTONE_TYPE_RINGBACK`;

class Ringtone extends Component {
  constructor(props) {
    super(props);
    let src;
    switch (props.type) {
    case RINGTONE_TYPE_INCOMING:
      src = RingtoneIncoming;
      break;
    case RINGTONE_TYPE_RINGBACK:
      src = RingtoneRingback;
      break;
    default:
    }

    this.audio = new Howl({
      src: [src],
      loop: true
    });
  }

  componentDidMount() {
    if (this.props.play) {
      this.audio.play();
    }
  }

  componentWillReceiveProps(nextProps) {
    if (!nextProps.play && this.props.play) {
      this.audio.stop();
    }
    else if (nextProps.play && !this.props.play) {
      this.audio.play();
    }
  }

  shouldComponentUpdate() {
    return false;
  }

  componentWillUnmount() {
    this.audio.unload();
  }

  render() {
    return null;
  }
}

Ringtone.propTypes = {
  play: PropTypes.bool,
  type: PropTypes.oneOf([RINGTONE_TYPE_INCOMING, RINGTONE_TYPE_RINGBACK]).isRequired
};

export default Ringtone;
