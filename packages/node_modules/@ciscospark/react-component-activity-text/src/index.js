import React from 'react';
import PropTypes from 'prop-types';
import classNames from 'classnames';
import {filterSync} from '@ciscospark/helper-html';
import linkifyHtml from 'linkifyjs/html';
import linkifyStr from 'linkifyjs/string';
import styles from './styles.css';

export default function ActivityText(props) {

  const {
    content,
    displayName
  } = props;

  const linkifyOptions = {
    ignoreTags: [`code`, `pre`],
    className: `ciscospark-activity-link`
  };
  /* eslint-disable-reason content is considered safe from server */
  /* eslint-disable react/no-danger */
  let linkifiedContent;
  if (content) {
    const cleaned = filterSync(() => {}, { // eslint-disable-line no-empty-function
      'spark-mention': [`data-object-type`, `data-object-id`, `data-object-url`],
      a: [`href`],
      b: [],
      blockquote: [`class`],
      strong: [],
      i: [],
      em: [],
      pre: [],
      code: [`class`],
      br: [],
      hr: [],
      p: [],
      ul: [],
      ol: [],
      li: [],
      h1: [],
      h2: [],
      h3: [],
      h4: [],
      h5: [],
      h6: []
    }, [], content);
    linkifiedContent = linkifyHtml(cleaned, linkifyOptions);
  }
  else {
    linkifiedContent = linkifyStr(displayName, linkifyOptions);
  }
  const htmlContent = {__html: linkifiedContent};
  return (
    <div
      className={classNames(`ciscospark-activity-text`, styles.activityText)}
      dangerouslySetInnerHTML={htmlContent}
    />
  );

  /* eslint-enable react/no-danger */
}

ActivityText.propTypes = {
  content: PropTypes.string,
  displayName: PropTypes.string
};
