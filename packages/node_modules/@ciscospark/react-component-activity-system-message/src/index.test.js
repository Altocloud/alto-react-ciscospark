import React from 'react';
import {createComponentWithIntl} from '@ciscospark/react-test-utils';

import ActivitySystemMessage from '.';

describe(`ActivitySystemMessage tombstone component`, () => {
  const activity = {
    id: `test-123-123-123-123`,
    name: `Test User`,
    timestamp: `2016-09-20T19:52:57.186Z`,
    verb: `tombstone`
  };

  const component = createComponentWithIntl(
    <ActivitySystemMessage
      id={activity.id}
      name={activity.name}
      timestamp={activity.timestamp}
      verb={activity.verb}
    />
  );

  it(`renders properly`, () => {
    expect(component).toMatchSnapshot();
  });
});

describe(`ActivitySystemMessage tombstone component is self`, () => {
  const activity = {
    id: `test-123-123-123-123`,
    name: `Test User`,
    timestamp: `2016-09-20T19:52:57.186Z`,
    verb: `tombstone`
  };

  const component = createComponentWithIntl(
    <ActivitySystemMessage
      id={activity.id}
      isSelf
      name={activity.name}
      timestamp={activity.timestamp}
      verb={activity.verb}
    />
  );

  it(`renders properly`, () => {
    expect(component).toMatchSnapshot();
  });
});

describe(`ActivitySystemMessage create component`, () => {
  const activity = {
    id: `test-123-123-123-123`,
    name: `Test User`,
    timestamp: `2016-09-20T19:52:57.186Z`,
    verb: `create`
  };

  const component = createComponentWithIntl(
    <ActivitySystemMessage
      id={activity.id}
      name={activity.name}
      timestamp={activity.timestamp}
      verb={activity.verb}
    />
  );

  it(`renders properly`, () => {
    expect(component).toMatchSnapshot();
  });
});

describe(`ActivitySystemMessage update component`, () => {
  let activity;
  beforeEach(() => {
    activity = {
      id: `test-123-123-123-123`,
      callData: {
        callInfo: {
          duration: 100,
          name: `Doug E. Fresh`
        },
        status: `youHadACall`
      },
      name: `Test User`,
      timestamp: `2016-09-20T19:52:57.186Z`,
      verb: `update`
    };
  });

  it(`renders established calls properly`, () => {
    const component = createComponentWithIntl(
      <ActivitySystemMessage
        callData={activity.callData}
        id={activity.id}
        name={activity.name}
        timestamp={activity.timestamp}
        verb={activity.verb}
      />
    );
    expect(component).toMatchSnapshot();
  });

  it(`renders missed calls properly`, () => {
    activity.callData.status = `youMissedACall`;
    const component = createComponentWithIntl(
      <ActivitySystemMessage
        callData={activity.callData}
        id={activity.id}
        name={activity.name}
        timestamp={activity.timestamp}
        verb={activity.verb}
      />
    );
    expect(component).toMatchSnapshot();
  });

  it(`renders cancelled calls properly`, () => {
    activity.callData.status = `someoneCancelledACall`;
    const component = createComponentWithIntl(
      <ActivitySystemMessage
        callData={activity.callData}
        id={activity.id}
        name={activity.name}
        timestamp={activity.timestamp}
        verb={activity.verb}
      />
    );
    expect(component).toMatchSnapshot();
  });

  it(`renders self cancelled calls properly`, () => {
    activity.callData.status = `youCancelledACall`;
    const component = createComponentWithIntl(
      <ActivitySystemMessage
        callData={activity.callData}
        id={activity.id}
        name={activity.name}
        timestamp={activity.timestamp}
        verb={activity.verb}
      />
    );
    expect(component).toMatchSnapshot();
  });

  it(`renders unavailable calls properly`, () => {
    activity.callData.status = `someoneWasUnavailable`;
    const component = createComponentWithIntl(
      <ActivitySystemMessage
        callData={activity.callData}
        id={activity.id}
        name={activity.name}
        timestamp={activity.timestamp}
        verb={activity.verb}
      />
    );
    expect(component).toMatchSnapshot();
  });
});
