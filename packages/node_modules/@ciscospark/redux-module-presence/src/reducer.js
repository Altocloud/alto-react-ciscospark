import {fromJS} from 'immutable';

import {
  SET_ERROR,
  SET_USER_PRESENCE_STATUS,
  UPDATE_MODULE_STATUS
} from './actions';

export const initialState = fromJS({
  status: {
    isError: false,
    isSettingUserStatus: false,
    isSubscribingToUpdates: false,
    isSubscribedToUpdates: false
  },
  items: {},
  error: null
});

export default function reducer(state = initialState, action) {
  switch (action.type) {
  case SET_USER_PRESENCE_STATUS:
    {
      const {status} = action.payload;
      return state.mergeDeep({items: fromJS(status)});
    }
  case UPDATE_MODULE_STATUS:
    return state.mergeDeep({
      status: action.payload.status
    });
  case SET_ERROR:
    return state.set(`error`, action.payload.error).setIn([`status`, `isError`], true);
  default:
    return state;
  }
}
