import {Map} from 'immutable';

import {
  GET_GUEST_USER_BEGIN,
  GET_GUEST_USER,
  UPDATE_GUEST_USER
} from './actions';

export const initialState = new Map({
  guest: null,
  status: new Map({
    isFetchingGuest: false
  })
});

export default function reducer(state = initialState, action) {
  switch (action.type) {

  case GET_GUEST_USER_BEGIN:
    return state.setIn([`status`, `isFetchingGuest`], action.payload.isFetchingGuest);
  case GET_GUEST_USER:
    return state.mergeDeep({
      status: {
        isFetchingGuest: action.payload.isFetchingGuest
      },
      guest: action.payload.guest
    });
  case UPDATE_GUEST_USER:
    return state.setIn([`guest`, `interaction`], action.payload.patch.interaction);
  default:
    return state;
  }
}
