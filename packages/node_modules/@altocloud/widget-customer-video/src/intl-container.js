import React, {PropTypes} from 'react';
import {addLocaleData, IntlProvider} from 'react-intl';
import enLocaleData from 'react-intl/locale-data/en';

import MessageMeet from './container';
import enTranslationMessages from './translations/en';


export default function MessageMeetWidgetWithIntl({
  accessToken,
  closeInteraction,
  refreshToken,
  initialActivity,
  interaction,
  onEvent,
  openInteraction,
  startCall,
  toPersonEmail,
  toPersonId,
  updateInteraction
}) {
  addLocaleData(enLocaleData);
  return (
    <IntlProvider locale="en" messages={enTranslationMessages}>
      <MessageMeet
        accessToken={accessToken}
        closeInteraction={closeInteraction}
        initialActivity={initialActivity}
        interaction={interaction}
        onEvent={onEvent}
        openInteraction={openInteraction}
        refreshToken={refreshToken}
        startCall={startCall}
        toPersonEmail={toPersonEmail}
        toPersonId={toPersonId}
        updateInteraction={updateInteraction}
      />
    </IntlProvider>
  );
}

MessageMeetWidgetWithIntl.propTypes = {
  accessToken: PropTypes.string.isRequired,
  closeInteraction: PropTypes.func.isRequired,
  initialActivity: PropTypes.string,
  interaction: PropTypes.object.isRequired,
  onEvent: PropTypes.func,
  openInteraction: PropTypes.func.isRequired,
  refreshToken: PropTypes.string,
  startCall: PropTypes.bool,
  toPersonEmail: PropTypes.string,
  toPersonId: PropTypes.string,
  updateInteraction: PropTypes.func.isRequired
};
