import axios from 'axios';

const CISCO_SPARK_URL = [`https://`, document.location.host.split(`.`)[0], `.altocloud.com/api/cisco-spark`].join(``);
const ciscoGuestApi = axios.create({
  baseURL: CISCO_SPARK_URL
});

const GET_FREE_GUEST_ENDPOINT = `/guests/states/free`;
export function fetchFreeUser(account) {
  // in development on localhost, we should just use hard coded tokens
  if (process.env.NODE_ENV === `development`) {
    return {
      then: (callback) => {
        callback({
          accessToken: `ODIyYmIyZmQtZmFhZi00Zjc5LWFjODgtOGY3ZTI0YTMxYmRiNjNmMTEzZWUtYmJl`,
          refreshToken: ``
        });
        return {
          catch: () => {}
        };
      }
    };
  }

  return ciscoGuestApi.get(GET_FREE_GUEST_ENDPOINT, {
    params: {
      account
    }
  }).then((response) => response.data);
}

const PATCH_GUEST_ENDPOINT = `/guests/`;
export function setUserAsBusy(account, sparkId, interaction) {
  // in development on localhost, we should just use hard coded tokens
  if (process.env.NODE_ENV === `development`) {
    return {
      then: (callback) => {
        callback();
        return {
          catch: () => {}
        };
      }
    };
  }

  return ciscoGuestApi.patch(PATCH_GUEST_ENDPOINT + sparkId, {
    account,
    interaction: interaction.id
  });
}
